using System.Collections.Generic;
using System.Threading;
using osu.Game.Audio;
using osu.Game.Rulesets.Judgements;
using osu.Game.Rulesets.Objects;
using osu.Game.Rulesets.Objects.Types;

namespace osu.Game.Rulesets.Gitaroo.Objects;

/// <summary>
/// Represents a hit object which requires press and holding a key.
/// </summary>
public class HoldNote : GitarooHitObject, IHasDuration
{
    public double EndTime
    {
        get => StartTime + Duration;
        set => Duration = value - StartTime;
    }

    public double Duration { get; set; }

    public double VelocityMultiplier { get; set; } = 1;

    public IList<IList<HitSampleInfo>> NodeSamples { get; set; }

    /// <summary>
    /// The head note of the hold.
    /// </summary>
    public HeadNote Head { get; protected set; }

    /// <summary>
    /// The tail note of the hold.
    /// </summary>
    public TailNote Tail { get; protected set; }

    /// <summary>
    /// The body of the hold.
    /// This is an invisible and silent object that tracks the holding state of the <see cref="HoldNote"/>.
    /// </summary>
    public HoldNoteBody Body { get; protected set; }

    protected override void CreateNestedHitObjects(CancellationToken cancellationToken)
    {
        base.CreateNestedHitObjects(cancellationToken);

        // Normally already generated by GitarooBeatmapConverter
        NodeSamples ??= CreateDefaultNodeSamples(this);

        AddNested(Head = new HeadNote
        {
            StartTime = StartTime,
            Samples = GetNodeSamples(0),
        });

        AddNested(Tail = new TailNote
        {
            StartTime = EndTime,
            Samples = GetNodeSamples(NodeSamples.Count - 1),
        });

        AddNested(Body = new HoldNoteBody
        {
            StartTime = StartTime,
        });
    }

    public IList<HitSampleInfo> GetNodeSamples(int nodeIndex) => nodeIndex < NodeSamples?.Count ? NodeSamples[nodeIndex] : Samples;

    /// <summary>
    /// Create the default note samples for a hold note, based off their main sample.
    /// </summary>
    /// <remarks>
    /// By default, osu!mania beatmaps in only play samples at the start of the hold note.
    /// </remarks>
    /// <param name="obj">The object to use as a basis for the head sample.</param>
    /// <returns>Defaults for assigning to <see cref="HoldNote.NodeSamples"/>.</returns>
    public static List<IList<HitSampleInfo>> CreateDefaultNodeSamples(HitObject obj) => new List<IList<HitSampleInfo>>
    {
        obj.Samples,
        new List<HitSampleInfo>(),
    };

    public override Judgement CreateJudgement() => new IgnoreJudgement();
}
